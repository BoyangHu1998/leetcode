class Solution {
    public int getWinner(int[] arr, int k) {
        if (k >= arr.length - 1) {
            return max(arr);
        }
        
        int max = arr[0];
        
        int i = 1, count = 0;
        
        // simulate using a cycular array
        while (count < k) {
            if (max < arr[i]) {
                max = arr[i];
                count = 1;
            } else { // >: b/c distinct numbers
                if (i == 0) {
                    swap(arr, 0, arr.length - 1);
                } else {
                    swap(arr, i, i-1);
                }
                count++;
            }
            i++;
            if (i == arr.length) {
                i = 0;
            }
        }
             
        return max;
    }
    
    private int max(int[] arr) {
        int max = 0;
        for (int i = 0; i < arr.length; i++) {
            if (max < arr[i]) {
                max = arr[i];
            }
        }
        return max;
    }
    
    private void swap(int[] arr, int x, int y) {
        int tmp = arr[x];
        arr[x] = arr[y];
        arr[y] = tmp;
    }
}
